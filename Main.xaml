<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1295.2,1104" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p5="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p6="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p8="http://schemas.uipath.com/workflow/activities/intelligentocr/training" xmlns:p9="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uiaam="clr-namespace:UiPath.IntelligentOCR.Activities.Actions.Model;assembly=UiPath.IntelligentOCR.Activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:upat="clr-namespace:UiPath.Persistence.Activities.Tasks;assembly=UiPath.Persistence.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="112">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Actions.Model</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities.Editors</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.Persistence.Activities.Tasks</x:String>
      <x:String>UiPath.Persistence.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="66">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Orchestration Process: UiPath.Persistance.Activities&#xA;&#xA;Mandatory Dependencies: &#xA;&#xA;Uipath.DocumentUnderstanding.ML.Activities&#xA;UiPath. IntelligentOCR.Activities&#xA;UiPath. OCR.Activities&#xA;&#xA;Reconmended Dependencies:&#xA;&#xA;UiPath.OmniPage.Activities&#xA;UiPath.PDF.Activities&#xA;Uipath.Excel.Activities" DisplayName="Flowchart - Main - Document Understanding Demonstration" sap:VirtualizedContainerService.HintSize="653.6,939.2" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="File path used to store all documents which have been processed." Name="DocumentStoragePath" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="File path used to store all documents to be processed." Name="InputFolderPath" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="File path used to store training data to be uploaded to AI  Center and used to train the Invoice ML model." Name="InvoiceTrainingDataPath" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="File path used store output data whilst processing documents." Name="OutputDataFolderPath" />
      <Variable x:TypeArguments="ss:SecureString" sap2010:Annotation.AnnotationText="API key used for document processing." Name="DocAPIKey" />
      <Variable x:TypeArguments="s:String[]" sap2010:Annotation.AnnotationText="Array used to store all documents retrieved from the specified input source." Name="DocumentPaths" />
      <Variable x:TypeArguments="p9:DocumentTaxonomy" sap2010:Annotation.AnnotationText="Contains all information about the groups, categories and document types defined in the Taxonomy Manager." Name="DocumentTaxonomy" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="File path used to store training data to be uploaded to AI  Center and used to train the Purchase Order ML model." Name="PurchaseOrderTrainingDataPath" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">280,2.4</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">310,77.6 310,107.6</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        <x:Double x:Key="Height">902.79999999999984</x:Double>
        <x:Double x:Key="Width">620</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID19</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID19">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">210,107.6</av:Point>
          <av:Size x:Key="ShapeSize">200,128.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">310,236.4 310,266.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Retrieve all assets from the predefined 'Shared' folder." DisplayName="1: Initialize Assets " sap:VirtualizedContainerService.HintSize="241.6,985.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message - Initialization" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Retrieving assets and credentials from Orchestrator...&quot;]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:LogMessage>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="File path used to store all documents to be processed." AssetName="InputFolderPath" DisplayName="Get Asset - Input Folder Path" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="GetRobotAsset_5">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[InputFolderPath]</OutArgument>
          </ui:GetRobotAsset.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetRobotAsset>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="File path used to store training data to be uploaded to AI Center and used to train the Invoice ML model." AssetName="InvoiceTrainingData" DisplayName="Get Asset - Invoice Training Data" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="GetRobotAsset_6">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[InvoiceTrainingDataPath]</OutArgument>
          </ui:GetRobotAsset.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetRobotAsset>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="File path used to store training data to be uploaded to AI Center and used to train the Purchase Order ML model." AssetName="PurchaseOrderTrainingData" DisplayName="Get Asset - Purchase Order Training Data" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="200,144.8" sap2010:WorkflowViewState.IdRef="GetRobotAsset_9">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[PurchaseOrderTrainingDataPath]</OutArgument>
          </ui:GetRobotAsset.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetRobotAsset>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="File path used store output data whilst processing documents." AssetName="OutputDataFolderPath" DisplayName="Get Asset - Output Data Folder Path" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="200,112.8" sap2010:WorkflowViewState.IdRef="GetRobotAsset_7">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[OutputDataFolderPath]</OutArgument>
          </ui:GetRobotAsset.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetRobotAsset>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="File path used to store all documents which have been processed." AssetName="DocumentStoragePath" DisplayName="Get Asset - Document Storage Path" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="200,112.8" sap2010:WorkflowViewState.IdRef="GetRobotAsset_8">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[DocumentStoragePath]</OutArgument>
          </ui:GetRobotAsset.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetRobotAsset>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">210,266.4</av:Point>
              <av:Size x:Key="ShapeSize">200,128.8</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">310,395.2 310,425.2</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Retrieve documents to be processed from the predefined input source." DisplayName="2: Get Transaction Data" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - Get Transaction Data" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Retrieving documents from the specified input source...&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <Assign sap2010:Annotation.AnnotationText="Assign documents into an Array of string variable so they can be processed one at a time." DisplayName="Assign - Documents to Documet Paths" sap:VirtualizedContainerService.HintSize="262.4,120" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[DocumentPaths]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(InputFolderPath)]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">210,425.2</av:Point>
                  <av:Size x:Key="ShapeSize">200,144.8</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">310,570 310,600</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="Turns the Taxonomy json into a variable that can be used with other activities during document processing." DisplayName="3: Load Taxonomy" sap:VirtualizedContainerService.HintSize="200,144.8" sap2010:WorkflowViewState.IdRef="Sequence_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message - Load Taxonomy" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Loading Taxonomy...&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="333.6,105.6" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_4" Taxonomy="[DocumentTaxonomy]" />
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">210,600</av:Point>
                      <av:Size x:Key="ShapeSize">200,128.8</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence sap2010:Annotation.AnnotationText="Process each file within the DocumentPaths array one at a time." DisplayName="Process Document - Layer 1" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Used to store the exception recorded by the user after a classification task has been diverted to Action Center." Name="ClassificationException" />
                      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Used to determine whether the document requires manual claasification." Name="RequireManualClassification" />
                      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Used to store the exception recorded by the user after a validation task has been diverted to Action Center." Name="ValidationException" />
                      <Variable x:TypeArguments="p3:Document" sap2010:Annotation.AnnotationText="Contains the information properties such as content type and number of pages. Also contains detailed information such as detected language and coordinates for every word identified in the file. &#xA;&#xA;Used to show the document in the Classification/Validation stations in Action Center." Name="DocumentObjectModel" />
                      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Contains the document text after it has been extracted during digitization." Name="DocumentText" />
                      <Variable x:TypeArguments="p4:ClassificationResult[]" sap2010:Annotation.AnnotationText="Stores the output from the Classify Document Scope activity. Contains the properties of the document be processed including the Confidence scores." Name="AutoClassificationResults" />
                      <Variable x:TypeArguments="p4:ClassificationResult[]" sap2010:Annotation.AnnotationText="Output generated by the 'Wait For Document Classification Action And Resume'. Stores the user validated classification results downloaded from the storage bucket." Name="ValidatedClassificationResults" />
                      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Created in the 'Wait for Classification Result' activity. Replaces the 'Document' variable in the event that an Action Center task is created so the process can continue to run in parllel." Name="ClassifiedDocumentPath" />
                      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Document category retrieved from the Taxonomy Manager using the 'OrganizeClassifiedDocuments' background process." Name="DocumentCategory" />
                      <Variable x:TypeArguments="p4:ExtractionResult" sap2010:Annotation.AnnotationText="Created in the 'Data Extraction Scope' activity." Name="AutomaticExtractionData" />
                      <Variable x:TypeArguments="sd1:DataSet" Name="ExtractionDataSet" />
                      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Manual verification required after the Export Extraction Results activity." Name="ManualVerification" />
                      <Variable x:TypeArguments="uiaam:DocumentValidationActionData" Name="ValidationActionObject" />
                      <Variable x:TypeArguments="p4:ExtractionResult" Name="ValidatedExtractionResults" />
                      <Variable x:TypeArguments="sd1:DataSet" Name="ExportValidatedDataSet" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ParallelForEach x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Type Argument: String&#xA;&#xA;Each document does not depend on each other, so they can be processed in parallel." DisplayName="Parallel For Each - Document" sap:VirtualizedContainerService.HintSize="306.4,1109.6" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_6" Values="[DocumentPaths]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="Document" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Process One File" sap:VirtualizedContainerService.HintSize="241.6,884.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message - Processing Document" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Processing: &quot; + Document.substring(93)]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                          <ui:MultipleAssign sap2010:Annotation.AnnotationText="Resets classification and validation exception variables before processing the next document." DisplayName="Multiple Assign - Reset Result Classification" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="s:Exception">[ClassificationException]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="s:Exception">[ValidationException]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[RequireManualClassification]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MultipleAssign>
                          <Sequence sap2010:Annotation.AnnotationText="Obtains machine readable text from the document and converts it into a variable that can be used throughout processing." DisplayName="4: Digitization" sap:VirtualizedContainerService.HintSize="375.2,446.4" sap2010:WorkflowViewState.IdRef="Sequence_25">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message - Digitizing Document" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Digitizing: &quot; + Document.substring(93)]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <p:DigitizeDocument sap2010:Annotation.AnnotationText="Will digitize for computer generated or native documents but will use it's OCR capabilities for images or snned documents." DegreeOfParallelism="-1" DisplayName="Digitize Document" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[Document]" DocumentText="[DocumentText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="333.6,160.8" sap2010:WorkflowViewState.IdRef="DigitizeDocument_2">
                              <p:DigitizeDocument.OCREngine>
                                <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                  <ActivityFunc.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                  </ActivityFunc.Argument>
                                  <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22.4" sap2010:WorkflowViewState.IdRef="OmniPageOCR_2" Image="[Image]" />
                                </ActivityFunc>
                              </p:DigitizeDocument.OCREngine>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:DigitizeDocument>
                          </Sequence>
                          <Sequence sap2010:Annotation.AnnotationText="Classifies the document based on what has been defined in the Taxonomy Manager." DisplayName="5: Classification" sap:VirtualizedContainerService.HintSize="200,144.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message - Classifying Document" sap:VirtualizedContainerService.HintSize="477.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Classifying: &quot; + Document.substring(93)]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" sap2010:Annotation.AnnotationText="API key used for Classification" AssetName="DocUnderstanding_APIKey" DisplayName="Get Credential - API Key" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="477.6,84" sap2010:WorkflowViewState.IdRef="GetRobotCredential_4" Password="[DocAPIKey]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:GetRobotCredential>
                            <p1:ClassifyDocumentScope ClassificationResults="[AutoClassificationResults]" DisplayName="Classify Document Scope" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[Document]" DocumentText="[DocumentText]" sap:VirtualizedContainerService.HintSize="477.6,647.2" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_3" Taxonomy="[DocumentTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI01d71d0338c547c1b55271434934fd7b&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;AccountsPayable.Incoming.Invoices&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI01d71d0338c547c1b55271434934fd7b&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI01d71d0338c547c1b55271434934fd7b&quot;:[]}}">
                              <p1:ClassifyDocumentScope.Classifiers>
                                <p1:IntelligentKeywordClassifier LearningData="{x:Null}" sap2010:Annotation.AnnotationText="https://docs.uipath.com/document-understanding/docs/public-endpoints.&#xA;&#xA;Create a json file and use it for the Learning File Path." ApiKey="[(new System.Net.NetworkCredential(&quot;&quot;, DocAPIKey)).Password]" DisplayName="Intelligent Keyword Classifier" Endpoint="https://du.uipath.com/svc/intelligentkeywords" sap:VirtualizedContainerService.HintSize="233.6,320.8" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifier_6" LearningFilePath="DocumentProcessing\IntelligentKeywordClassifier.json" PersistenceId="UI01d71d0338c547c1b55271434934fd7b">
                                  <p1:IntelligentKeywordClassifier.ClassifierResult>
                                    <OutArgument x:TypeArguments="p2:ClassifierResult">
                                      <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                                        <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassificationResult" />
                                      </DelegateArgumentReference>
                                    </OutArgument>
                                  </p1:IntelligentKeywordClassifier.ClassifierResult>
                                  <p1:IntelligentKeywordClassifier.DocumentObjectModel>
                                    <InArgument x:TypeArguments="p3:Document">
                                      <DelegateArgumentValue x:TypeArguments="p3:Document">
                                        <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p1:IntelligentKeywordClassifier.DocumentObjectModel>
                                  <p1:IntelligentKeywordClassifier.DocumentPath>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p1:IntelligentKeywordClassifier.DocumentPath>
                                  <p1:IntelligentKeywordClassifier.DocumentText>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p1:IntelligentKeywordClassifier.DocumentText>
                                  <p1:IntelligentKeywordClassifier.DocumentTypes>
                                    <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
                                      <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                                        <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p1:IntelligentKeywordClassifier.DocumentTypes>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </p1:IntelligentKeywordClassifier>
                              </p1:ClassifyDocumentScope.Classifiers>
                            </p1:ClassifyDocumentScope>
                          </Sequence>
                          <Sequence sap2010:Annotation.AnnotationText="Process each classified document within the AutoClassificationResults variable." DisplayName="Process Document - Layer 2" sap:VirtualizedContainerService.HintSize="200,144.8" sap2010:WorkflowViewState.IdRef="Sequence_28">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ForEach x:TypeArguments="p4:ClassificationResult" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Type Argument: Classification Result" DisplayName="For Each - Document in AutoClassificationResult" sap:VirtualizedContainerService.HintSize="560,1119.2" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[AutoClassificationResults]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="p4:ClassificationResult">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="p4:ClassificationResult" Name="FileAutoClassificationResult" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Sequence - For Each - Document in AutoClassificationResult" sap:VirtualizedContainerService.HintSize="524.8,953.6" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence sap2010:Annotation.AnnotationText="The confidence score is used to determine whether the document needs to be manually classified." DisplayName="6: Get Confidence Score" sap:VirtualizedContainerService.HintSize="483.2,144.8" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message - Classification Confidence" sap:VirtualizedContainerService.HintSize="483.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;File Confidence for &quot; + Document.substring(93) + &quot; is &quot; + FileAutoClassificationResult.Confidence.ToString]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:LogMessage>
                                      <If sap2010:Annotation.AnnotationText="The Confidence score in the classification result can be used to determine whether the document requires manual classification or not." Condition="[FileAutoClassificationResult.Confidence &lt; 1.1]" DisplayName="If - Confidence level is less than the threshold" sap:VirtualizedContainerService.HintSize="483.2,283.2" sap2010:WorkflowViewState.IdRef="If_11">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Assign DisplayName="Assign - True to RequireManualClassification" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[RequireManualClassification]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                    <If Condition="[RequireManualClassification]" DisplayName="If -Document Requires Manual Classification" sap:VirtualizedContainerService.HintSize="483.2,288" sap2010:WorkflowViewState.IdRef="If_12">
                                      <If.Then>
                                        <Sequence sap2010:Annotation.AnnotationText="Insufficient confidence level. A classification task will be created in Action Center." DisplayName="6.1: Action Center - Classification" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="uiaam:DocumentClassificationActionData" sap2010:Annotation.AnnotationText="Output generated by the 'Create Document Classification Action' activity. Used as an input for the 'Wait For Documnet Classification Action and Resume' activity." Name="ClassificationActionObject" />
                                            <Variable x:TypeArguments="scg:List(upat:TaskUserAssignment)" Default="[new list(of TaskUserAssignment)]" Name="UserAssignments" />
                                            <Variable x:TypeArguments="scg:List(upat:TaskAssignmentResponse)" Default="[new list(of TaskAssignmentResponse)]" Name="FailedAssignments" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message - Classification Task" sap:VirtualizedContainerService.HintSize="514.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;A classification task has be created for &quot; + Document.substring(93) + &quot; in Action Center&quot;]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                          <p:CreateDocumentClassificationAction FolderPath="{x:Null}" TimeoutMs="{x:Null}" ActionCatalog="[&quot;Classification Catalog&quot;]" ActionOutput="[ClassificationActionObject]" ActionPriority="Medium" ActionTitle="[&quot;Verify Classification for: &quot;  + Document.substring(93)]" sap2010:Annotation.AnnotationText="The 'Bucket' is an orchestrator storage location used to store the data that will be passed from the Document Classification Data Input' variables." AutomaticClassificationResults="[AutoClassificationResults]" BucketFolderPath="Shared" BucketName="DocTasks" DisplayName="Create Document Classification Action" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[Document]" DocumentText="[DocumentText]" sap:VirtualizedContainerService.HintSize="514.4,416" sap2010:WorkflowViewState.IdRef="CreateDocumentClassificationAction_3" Taxonomy="[DocumentTaxonomy]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </p:CreateDocumentClassificationAction>
                                          <AddToCollection x:TypeArguments="upat:TaskUserAssignment" sap2010:Annotation.AnnotationText="Type Argument: TaskUserAssignment&#xA;&#xA;Add task to UserAssignments list." Collection="[UserAssignments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="514.4,114.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[New TaskUserAssignment(ClassificationActionObject.Id, &quot;sam.robinson@revealgroup.com&quot;)]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </AddToCollection>
                                          <upat:AssignTasks TimeoutMs="{x:Null}" sap2010:Annotation.AnnotationText="Assign task automatically using the task ID and the users email address." DisplayName="Assign Tasks - Classification Task Automatically" FailedTaskAssignments="[FailedAssignments]" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="514.4,206.4" sap2010:WorkflowViewState.IdRef="AssignTasks_2" TaskUserAssignments="[UserAssignments]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </upat:AssignTasks>
                                          <TryCatch sap2010:Annotation.AnnotationText="The user has the option to report the document as an exception in Action Center." DisplayName="Try Catch - Wait For Classification Result" sap:VirtualizedContainerService.HintSize="514.4,627.2" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <p:WaitForDocumentClassificationActionAndResume ActionOutput="{x:Null}" StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" ActionInput="[ClassificationActionObject]" AutomaticClassificationResults="[AutoClassificationResults]" DisplayName="Wait For Document Classification Action And Resume" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[ClassifiedDocumentPath]" DocumentText="[DocumentText]" DownloadFolderPath="C:\Users\SamRobinson\Downloads" sap:VirtualizedContainerService.HintSize="477.6,364.8" sap2010:WorkflowViewState.IdRef="WaitForDocumentClassificationActionAndResume_3" RemoveDataFromStorage="False" Taxonomy="[DocumentTaxonomy]" ValidatedClassificationResults="[ValidatedClassificationResults]" />
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="480.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <Assign sap2010:Annotation.AnnotationText="Assign exception recorded by the user in Action Center." DisplayName="Assign - Classification Exception Message" sap:VirtualizedContainerService.HintSize="262.4,91.2" sap2010:WorkflowViewState.IdRef="Assign_11">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="s:Exception">[ClassificationException]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                    </Assign.Value>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Assign>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:Annotation.AnnotationText="Sufficient confidence level. The document has been automatically classified." DisplayName="Automatic Classifcation" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message - Automatic Classification" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[Document.substring(93) + &quot; has been automatically classified&quot;]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                          <ui:MultipleAssign sap2010:Annotation.AnnotationText="Update variable values to enable automatic classification." DisplayName="Multiple Assign - Auto Classification Result" sap:VirtualizedContainerService.HintSize="333.6,174.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="p4:ClassificationResult[]">[ValidatedClassificationResults]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="p4:ClassificationResult[]">[AutoClassificationResults]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[ClassifiedDocumentPath]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[Document]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:MultipleAssign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <If sap2010:Annotation.AnnotationText="If no exceptions have been reported by the user for the classification task in Action Center." Condition="[ClassificationException is Nothing]" DisplayName="If - No Exceptions Exist" sap:VirtualizedContainerService.HintSize="483.2,348" sap2010:WorkflowViewState.IdRef="If_13">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap2010:Annotation.AnnotationText="Process each validated document within the ValidatedClassificationResults variable." DisplayName="Process Document - Layer 3" sap:VirtualizedContainerService.HintSize="200,144.8" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ParallelForEach x:TypeArguments="p4:ClassificationResult" DisplayName="For Each - Document in ValidatedClassificationResults" sap:VirtualizedContainerService.HintSize="597.6,1786.4" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_7" Values="[ValidatedClassificationResults]">
                                            <ActivityAction x:TypeArguments="p4:ClassificationResult">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="p4:ClassificationResult" Name="EachClassifier" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Sequence - For Each - Document in AutoClassificationResult" sap:VirtualizedContainerService.HintSize="548,1637.6" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Assign - Reset Validation Exception" sap:VirtualizedContainerService.HintSize="506.4,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:Exception">[ValidationException]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Sequence sap2010:Annotation.AnnotationText="Invoke a background process to sort the documents into files using the naming conventions defined in th Taxonomy Manager." DisplayName="7: Document Sorting" sap:VirtualizedContainerService.HintSize="752.8,659.2" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="x:String" Name="DocString" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message - Document Sorting" sap:VirtualizedContainerService.HintSize="711.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;Sorting: &quot; + Document.substring(93)]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:LogMessage>
                                                  <If sap2010:Annotation.AnnotationText="If Manual Clasification was required, the sequence is carried out as an unattended process for that document type. Hence, the invoke operations cannot be performed paralell to the current process. &#xA;&#xA;This condition is used to check the classification method, and perform the invoke in an efficient way." Condition="[RequireManualClassification]" DisplayName="If - Change Process Method Bases on Classification Method" sap:VirtualizedContainerService.HintSize="711.2,402.4" sap2010:WorkflowViewState.IdRef="If_14">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <ui:InvokeProcess ContinueOnError="{x:Null}" DisplayName="Invoke Process - Organize Classified Documents" EntryPointPath="OrganizeClassifiedDocuments.xaml" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="333.6,167.2" sap2010:WorkflowViewState.IdRef="InvokeProcess_4" ProcessName="OrganizeClassifiedDocumentsNew">
                                                        <ui:InvokeProcess.Arguments>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_DocumentClassifier">[EachClassifier.DocumentTypeId]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_DocumentPath">[ClassifiedDocumentPath]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_StorageLocation">[DocumentStoragePath]</InArgument>
                                                          <OutArgument x:TypeArguments="x:String" x:Key="out_DocumentCategory">[DocumentCategory]</OutArgument>
                                                          <InArgument x:TypeArguments="p4:ClassificationResult" x:Key="in_SegmentClassificationResult">[EachClassifier]</InArgument>
                                                        </ui:InvokeProcess.Arguments>
                                                      </ui:InvokeProcess>
                                                    </If.Then>
                                                    <If.Else>
                                                      <ui:BeginProcess DisplayName="Run Parallel Process - Organize Classified Documents" EntryPointPath="OrganizeClassifiedDocuments.xaml" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="333.6,167.2" sap2010:WorkflowViewState.IdRef="BeginProcess_4" ProcessName="OrganizeClassifiedDocumentsNew">
                                                        <ui:BeginProcess.Arguments>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_DocumentClassifier">[EachClassifier.DocumentTypeId]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_DocumentPath">[ClassifiedDocumentPath]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_StorageLocation">[DocumentStoragePath]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="out_DocumentCatagory">[DocumentCategory]</InArgument>
                                                          <InArgument x:TypeArguments="p4:ClassificationResult" x:Key="in_SegmentClassificationResult">[EachClassifier]</InArgument>
                                                        </ui:BeginProcess.Arguments>
                                                      </ui:BeginProcess>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                                <Sequence sap2010:Annotation.AnnotationText="Extract information from the document using the extractors in the Data Extraction Scope activity" DisplayName="8: Extraction" sap:VirtualizedContainerService.HintSize="506.4,144.8" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message - Data Extraction" sap:VirtualizedContainerService.HintSize="608.8,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Extracting: &quot; + Document.substring(93)]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:LogMessage>
                                                  <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" sap2010:Annotation.AnnotationText="API key used for Data Extraction." AssetName="DocUnderstanding_APIKey" DisplayName="Get Credential - API Key" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="608.8,96.8" sap2010:WorkflowViewState.IdRef="GetRobotCredential_5" Password="[DocAPIKey]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:GetRobotCredential>
                                                  <p5:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[EachClassifier]" DisplayName="Data Extraction Scope" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[ClassifiedDocumentPath]" DocumentText="[DocumentText]" ExtractionResult="[AutomaticExtractionData]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="608.8,521.6" sap2010:WorkflowViewState.IdRef="DataExtractionScope_3" Taxonomy="[DocumentTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI58d358a951b24c51bf49c06535984e71&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices&quot;:{&quot;FieldMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices.SupplierName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.SupplierName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.InvoiceDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.InvoiceDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.SupplierAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.SupplierAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.PaymentTerms&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.PaymentTerms&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.BillingName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.BillingName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.BillingAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.BillingAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.ShippingAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.ShippingAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.NetAmount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.NetAmount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems.LineTotal&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.LineTotal&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;},&quot;AccountsPayable.Incoming.PurchaseOrders&quot;:{&quot;FieldMappings&quot;:{&quot;AccountsPayable.Incoming.PurchaseOrders.PONumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.PONumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;po-number\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.PODate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.PODate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.ClientName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ClientName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;client-name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.ClientAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ClientAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;client-address\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.VendorName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.VendorName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;vendor-name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.VendorAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.VendorAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;vendor-address\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.ShippingName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ShippingName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;shipping-name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.DeliveryDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.DeliveryDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;delivery-by-date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;items\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;line-number\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.ItemDescription&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.ItemDescription&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;description\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;quantity\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;unit-price\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineAmount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineAmount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;line-amount\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}},&quot;UIbdd739b0ee1d4be4815d9a5f9b6953b6&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices&quot;:{&quot;FieldMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices.SupplierName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.SupplierName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.InvoiceDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.InvoiceDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;invoice-no\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.SupplierAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.SupplierAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;vendor-addr\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.PaymentTerms&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.PaymentTerms&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;payment-terms\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.BillingName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.BillingName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;billing-name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.BillingAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.BillingAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;billing-addr\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.ShippingAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.ShippingAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;shipping-addr\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.NetAmount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.NetAmount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;net-amount\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;total\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;items\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;description\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;quantity\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;unit-price\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems.LineTotal&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.LineTotal&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;line-amount\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;},&quot;AccountsPayable.Incoming.PurchaseOrders&quot;:{&quot;FieldMappings&quot;:{&quot;AccountsPayable.Incoming.PurchaseOrders.PONumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.PONumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.PODate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.PODate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.ClientName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ClientName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.ClientAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ClientAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.VendorName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.VendorName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.VendorAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.VendorAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.ShippingName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ShippingName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.DeliveryDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.DeliveryDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.ItemDescription&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.ItemDescription&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineAmount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineAmount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UIbdd739b0ee1d4be4815d9a5f9b6953b6&quot;:&quot;0&quot;,&quot;UI58d358a951b24c51bf49c06535984e71&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIbdd739b0ee1d4be4815d9a5f9b6953b6&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;invoice-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;po-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-vat-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tax&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;total&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-terms&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;net-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;due-date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;discount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-charges&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-vat-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;currency&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;description&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;quantity&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;unit-price&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;item-po-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-no&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;part-no&quot;,&quot;SubOptions&quot;:null}]}]}],&quot;UI58d358a951b24c51bf49c06535984e71&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;po-number&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;client-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;client-address&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-address&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-address&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-address&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-terms&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;delivery-by-date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;discount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;net-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tax-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tax-rate&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;total-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;currency&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;line-number&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;description&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;product-code&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;delivery-date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;unit-measure&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;unit-price&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;quantity&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-net-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-tax-rate&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-tax-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-amount&quot;,&quot;SubOptions&quot;:null}]}]}]}}">
                                                    <p5:DataExtractionScope.Extractors>
                                                      <p6:MachineLearningExtractor SelectedMLSkill="{x:Null}" ApiKey="[(new System.Net.NetworkCredential(&quot;&quot;, DocAPIKey)).Password]" Configuration="{}{&quot;Endpoint&quot;:&quot;https://du.uipath.com/ie/purchase_orders&quot;,&quot;ApiKey&quot;:&quot;w3h9+k9CsaUV1PlD+ya0McgBJepeuihtF/Gdx15czcQkh+Cksex0VsWE84tkcmcQgMdW7M2mn23PdnEnv3a9bQ==&quot;,&quot;AvailableMLSkills&quot;:[]}" DisplayName="Machine Learning Extractor - PO" Endpoint="https://du.uipath.com/ie/purchase_orders" sap:VirtualizedContainerService.HintSize="233.6,195.2" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_3" PersistenceId="UI58d358a951b24c51bf49c06535984e71" RetryOnFailure="True" Timeout="100000" UseServerSideOCR="False">
                                                        <p6:MachineLearningExtractor.AvailableMLSkills>
                                                          <sc:BindingList x:TypeArguments="x:String" AllowEdit="True" AllowNew="False" AllowRemove="True" RaiseListChangedEvents="True" />
                                                        </p6:MachineLearningExtractor.AvailableMLSkills>
                                                        <p6:MachineLearningExtractor.DocumentBounds>
                                                          <InArgument x:TypeArguments="p4:ResultsDocumentBounds">
                                                            <DelegateArgumentValue x:TypeArguments="p4:ResultsDocumentBounds">
                                                              <DelegateInArgument x:TypeArguments="p4:ResultsDocumentBounds" Name="DocumentBounds" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.DocumentBounds>
                                                        <p6:MachineLearningExtractor.DocumentObjectModel>
                                                          <InArgument x:TypeArguments="p3:Document">
                                                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                                                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.DocumentObjectModel>
                                                        <p6:MachineLearningExtractor.DocumentPath>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.DocumentPath>
                                                        <p6:MachineLearningExtractor.DocumentText>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.DocumentText>
                                                        <p6:MachineLearningExtractor.ExtractorDocumentType>
                                                          <InArgument x:TypeArguments="p7:ExtractorDocumentType">
                                                            <DelegateArgumentValue x:TypeArguments="p7:ExtractorDocumentType">
                                                              <DelegateInArgument x:TypeArguments="p7:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.ExtractorDocumentType>
                                                        <p6:MachineLearningExtractor.ExtractorResult>
                                                          <OutArgument x:TypeArguments="p7:ExtractorResult">
                                                            <DelegateArgumentReference x:TypeArguments="p7:ExtractorResult">
                                                              <DelegateOutArgument x:TypeArguments="p7:ExtractorResult" Name="ExtractorResult" />
                                                            </DelegateArgumentReference>
                                                          </OutArgument>
                                                        </p6:MachineLearningExtractor.ExtractorResult>
                                                      </p6:MachineLearningExtractor>
                                                      <p6:MachineLearningExtractor SelectedMLSkill="{x:Null}" ApiKey="[(new System.Net.NetworkCredential(&quot;&quot;, DocAPIKey)).Password]" Configuration="{}{&quot;Endpoint&quot;:&quot;https://du-au.uipath.com/ie/invoices&quot;,&quot;ApiKey&quot;:&quot;(new System.Net.NetworkCredential(\&quot;\&quot;, DocAPIKey)).Password&quot;,&quot;AvailableMLSkills&quot;:[]}" DisplayName="Machine Learning Extractor - Invoices" Endpoint="https://du-au.uipath.com/ie/invoices" sap:VirtualizedContainerService.HintSize="233.6,195.2" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_2" PersistenceId="UIbdd739b0ee1d4be4815d9a5f9b6953b6" RetryOnFailure="True" Timeout="100000" UseServerSideOCR="False">
                                                        <p6:MachineLearningExtractor.AvailableMLSkills>
                                                          <sc:BindingList x:TypeArguments="x:String" AllowEdit="True" AllowNew="False" AllowRemove="True" RaiseListChangedEvents="True" />
                                                        </p6:MachineLearningExtractor.AvailableMLSkills>
                                                        <p6:MachineLearningExtractor.DocumentBounds>
                                                          <InArgument x:TypeArguments="p4:ResultsDocumentBounds">
                                                            <DelegateArgumentValue x:TypeArguments="p4:ResultsDocumentBounds">
                                                              <DelegateInArgument x:TypeArguments="p4:ResultsDocumentBounds" Name="DocumentBounds" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.DocumentBounds>
                                                        <p6:MachineLearningExtractor.DocumentObjectModel>
                                                          <InArgument x:TypeArguments="p3:Document">
                                                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                                                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.DocumentObjectModel>
                                                        <p6:MachineLearningExtractor.DocumentPath>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.DocumentPath>
                                                        <p6:MachineLearningExtractor.DocumentText>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.DocumentText>
                                                        <p6:MachineLearningExtractor.ExtractorDocumentType>
                                                          <InArgument x:TypeArguments="p7:ExtractorDocumentType">
                                                            <DelegateArgumentValue x:TypeArguments="p7:ExtractorDocumentType">
                                                              <DelegateInArgument x:TypeArguments="p7:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractor.ExtractorDocumentType>
                                                        <p6:MachineLearningExtractor.ExtractorResult>
                                                          <OutArgument x:TypeArguments="p7:ExtractorResult">
                                                            <DelegateArgumentReference x:TypeArguments="p7:ExtractorResult">
                                                              <DelegateOutArgument x:TypeArguments="p7:ExtractorResult" Name="ExtractorResult" />
                                                            </DelegateArgumentReference>
                                                          </OutArgument>
                                                        </p6:MachineLearningExtractor.ExtractorResult>
                                                      </p6:MachineLearningExtractor>
                                                    </p5:DataExtractionScope.Extractors>
                                                  </p5:DataExtractionScope>
                                                </Sequence>
                                                <Sequence sap2010:Annotation.AnnotationText="The confidence score is used to determine whether the document needs to be manually validated." DisplayName="9: Get Confidence Score" sap:VirtualizedContainerService.HintSize="506.4,144.8" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <p5:ExportExtractionResults DataSet="[ExtractionDataSet]" DisplayName="Export Extraction Results" ExtractionResult="[AutomaticExtractionData]" sap:VirtualizedContainerService.HintSize="698.4,176.8" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="True" IncludeOCRConfidence="True" />
                                                  <ui:CommentOut sap2010:Annotation.AnnotationText="Create Excel Worksheet with Confidence Scores." DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="698.4,545.6" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                                    <ui:CommentOut.Body>
                                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="452,436" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="410.4,343.2" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[ExtractionDataSet.Tables]">
                                                          <ui:ForEach.Body>
                                                            <ActivityAction x:TypeArguments="sd1:DataTable">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="ExtractionDataTable" />
                                                              </ActivityAction.Argument>
                                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,208.8" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:WriteRange AddHeaders="True" DataTable="[ExtractionDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[ExtractionDataTable.TableName]" WorkbookPath="OutputData.xlsx">
                                                                  <ui:WriteRange.StartingCell>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                                    </InArgument>
                                                                  </ui:WriteRange.StartingCell>
                                                                </ui:WriteRange>
                                                              </Sequence>
                                                            </ActivityAction>
                                                          </ui:ForEach.Body>
                                                        </ui:ForEach>
                                                      </Sequence>
                                                    </ui:CommentOut.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:CommentOut>
                                                  <Assign DisplayName="Assign - Reset ManualVerification" sap:VirtualizedContainerService.HintSize="698.4,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[ManualVerification]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap2010:Annotation.AnnotationText="Retrieve the document category from the Taxonoy Manager." DisplayName="Assign - Document Category" sap:VirtualizedContainerService.HintSize="698.4,104" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[DocumentCategory]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[EachClassifier.DocumentTypeId.Split("."c)(EachClassifier.DocumentTypeId.Split("."c).Length - 1).ToString]</InArgument>
                                                    </Assign.Value>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Assign>
                                                  <Flowchart DisplayName="Flowchart - Retrieve Confidence Score from Document Type" sap:VirtualizedContainerService.HintSize="698.4,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_2">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <av:Point x:Key="ShapeLocation">300,2.5</av:Point>
                                                        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                                                        <av:PointCollection x:Key="ConnectorLocation">330,77.7 330,127.7</av:PointCollection>
                                                        <x:Double x:Key="Width">664.40000000000009</x:Double>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Flowchart.StartNode>
                                                      <x:Reference>__ReferenceID15</x:Reference>
                                                    </Flowchart.StartNode>
                                                    <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID15" DisplayName="Document Type" Expression="[DocumentCategory]" sap:VirtualizedContainerService.HintSize="88.8,87.2" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
                                                      <FlowSwitch.Default>
                                                        <FlowStep x:Name="__ReferenceID12">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <av:Point x:Key="ShapeLocation">0,136.9</av:Point>
                                                              <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Sequence DisplayName="Invoices" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Type Argument: DataTable" DisplayName="For Each - Data Table in ExtractionDataSet" sap:VirtualizedContainerService.HintSize="636.8,869.6" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[ExtractionDataSet.Tables]">
                                                              <ui:ForEach.Body>
                                                                <ActivityAction x:TypeArguments="sd1:DataTable">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="ExtractDT" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Sequence - For Each - Data Table in ExtractionDataSet" sap:VirtualizedContainerService.HintSize="601.6,704" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:ForEach x:TypeArguments="sd1:DataColumn" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Type Argument: Data Column" DisplayName="For Each - Column in Extract DT" sap:VirtualizedContainerService.HintSize="560,611.2" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[ExtractDT.Columns]">
                                                                      <ui:ForEach.Body>
                                                                        <ActivityAction x:TypeArguments="sd1:DataColumn">
                                                                          <ActivityAction.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd1:DataColumn" Name="DTColumn" />
                                                                          </ActivityAction.Argument>
                                                                          <Sequence DisplayName="Sequence - For Each - Column in Extract DT" sap:VirtualizedContainerService.HintSize="524.8,445.6" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <If Condition="[(DTColumn.ColumnName.Contains(&quot;- Confidence&quot;) Or DTColumn.ColumnName.Contains(&quot;- OCR Confidence&quot;)) And Not ManualVerification And Not DTColumn.ColumnName.Contains(&quot;Line Items - OCR Confidence&quot;)]" DisplayName="If - the column names contain Extractor or OCR Confidence" sap:VirtualizedContainerService.HintSize="483.2,352.8" sap2010:WorkflowViewState.IdRef="If_15">
                                                                              <If.Then>
                                                                                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[ExtractDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="233.6,173.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                                                                  <ui:ForEachRow.Body>
                                                                                    <ActivityAction x:TypeArguments="sd1:DataRow">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRow" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Flowchart sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                            <av:Point x:Key="ShapeLocation">20,2.4</av:Point>
                                                                                            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                                                                                            <av:PointCollection x:Key="ConnectorLocation">50,77.6 50,107.6 49.6,107.6 49.6,127.6</av:PointCollection>
                                                                                            <x:Double x:Key="Height">721.99999999999977</x:Double>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                        <Flowchart.StartNode>
                                                                                          <x:Reference>__ReferenceID11</x:Reference>
                                                                                        </Flowchart.StartNode>
                                                                                        <FlowDecision x:Name="__ReferenceID11" Condition="[ManualVerification]" DisplayName="Manual Verfiation" sap:VirtualizedContainerService.HintSize="99.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <av:Point x:Key="ShapeLocation">0,127.6</av:Point>
                                                                                              <av:Size x:Key="ShapeSize">99.2,87.2</av:Size>
                                                                                              <av:PointCollection x:Key="FalseConnector">99.2,171.2 185,171.2 185,226.4</av:PointCollection>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <FlowDecision.False>
                                                                                            <FlowDecision x:Name="__ReferenceID7" Condition="[string.IsNullOrEmpty(CurrentRow(DTColumn.ColumnName).ToString)]" DisplayName="Null Value Check" sap:VirtualizedContainerService.HintSize="93.6,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_3" True="{x:Reference __ReferenceID6}">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                  <av:Point x:Key="ShapeLocation">114.8,226.4</av:Point>
                                                                                                  <av:Size x:Key="ShapeSize">93.6,87.2</av:Size>
                                                                                                  <av:PointCollection x:Key="TrueConnector">114.8,270 8.80000000000001,270 8.80000000000001,620 38.8,620</av:PointCollection>
                                                                                                  <av:PointCollection x:Key="FalseConnector">208.4,270 429,270 429,326.4</av:PointCollection>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <FlowDecision.False>
                                                                                                <FlowDecision x:Name="__ReferenceID8" Condition="[DTColumn.ColumnName.Contains(&quot;- Confidence&quot;)]" DisplayName="Extractor Confidence" sap:VirtualizedContainerService.HintSize="116,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                      <av:Point x:Key="ShapeLocation">342,326.4</av:Point>
                                                                                                      <av:Size x:Key="ShapeSize">116,87.2</av:Size>
                                                                                                      <av:PointCollection x:Key="TrueConnector">342,370 290,370 290,456.4</av:PointCollection>
                                                                                                      <av:PointCollection x:Key="FalseConnector">458,370 510,370 510,456.4</av:PointCollection>
                                                                                                      <x:String x:Key="FalseLabel">OCR</x:String>
                                                                                                      <x:String x:Key="TrueLabel">Extractor</x:String>
                                                                                                    </scg:Dictionary>
                                                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                                                  <FlowDecision.True>
                                                                                                    <FlowDecision x:Name="__ReferenceID9" Condition="[Double.Parse(CurrentRow(DTColumn.ColumnName).ToString) &lt; 0.7]" DisplayName="Confidence Value Check" sap:VirtualizedContainerService.HintSize="132,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_5" True="{x:Reference __ReferenceID6}">
                                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                          <av:Point x:Key="ShapeLocation">224,456.4</av:Point>
                                                                                                          <av:Size x:Key="ShapeSize">132,87.2</av:Size>
                                                                                                          <av:PointCollection x:Key="TrueConnector">224,500 170,500 170,590</av:PointCollection>
                                                                                                        </scg:Dictionary>
                                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                                    </FlowDecision>
                                                                                                  </FlowDecision.True>
                                                                                                  <FlowDecision.False>
                                                                                                    <FlowDecision x:Name="__ReferenceID10" Condition="[Double.Parse(CurrentRow(DTColumn.ColumnName).ToString) &lt; 0.5]" DisplayName="Confidence Value Check" sap:VirtualizedContainerService.HintSize="132,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                          <av:Point x:Key="ShapeLocation">444,456.4</av:Point>
                                                                                                          <av:Size x:Key="ShapeSize">132,87.2</av:Size>
                                                                                                          <av:PointCollection x:Key="TrueConnector">444,500 414,500 414,620 301.2,620</av:PointCollection>
                                                                                                        </scg:Dictionary>
                                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                                      <FlowDecision.True>
                                                                                                        <FlowStep x:Name="__ReferenceID6">
                                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                              <av:Point x:Key="ShapeLocation">38.8,590</av:Point>
                                                                                                              <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                                                                                                            </scg:Dictionary>
                                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                                          <Assign DisplayName="Assign - True to ManualVerification" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:Boolean">[ManualVerification]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                            </Assign.Value>
                                                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                              </scg:Dictionary>
                                                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                                                          </Assign>
                                                                                                        </FlowStep>
                                                                                                      </FlowDecision.True>
                                                                                                    </FlowDecision>
                                                                                                  </FlowDecision.False>
                                                                                                </FlowDecision>
                                                                                              </FlowDecision.False>
                                                                                            </FlowDecision>
                                                                                          </FlowDecision.False>
                                                                                        </FlowDecision>
                                                                                        <x:Reference>__ReferenceID7</x:Reference>
                                                                                        <x:Reference>__ReferenceID6</x:Reference>
                                                                                        <x:Reference>__ReferenceID8</x:Reference>
                                                                                        <x:Reference>__ReferenceID9</x:Reference>
                                                                                        <x:Reference>__ReferenceID10</x:Reference>
                                                                                      </Flowchart>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEachRow.Body>
                                                                                </ui:ForEachRow>
                                                                              </If.Then>
                                                                            </If>
                                                                          </Sequence>
                                                                        </ActivityAction>
                                                                      </ui:ForEach.Body>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:ForEach>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:ForEach.Body>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:ForEach>
                                                          </Sequence>
                                                        </FlowStep>
                                                      </FlowSwitch.Default>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <av:Point x:Key="ShapeLocation">285.6,127.7</av:Point>
                                                          <av:Size x:Key="ShapeSize">88.8,87.2</av:Size>
                                                          <av:PointCollection x:Key="ReceiptsConnector">374.4,171.3 464.4,171.3</av:PointCollection>
                                                          <av:PointCollection x:Key="Purchase OrderConnector">384.4,171.3 504.4,171.3</av:PointCollection>
                                                          <x:String x:Key="DefaultCaseDisplayName">Invoices</x:String>
                                                          <av:PointCollection x:Key="Default">285.6,171.3 200,171.3</av:PointCollection>
                                                          <av:PointCollection x:Key="PurchaseOrdersConnector">330,214.9 330,274.9</av:PointCollection>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <FlowStep x:Key="Receipts" x:Name="__ReferenceID13">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <av:Point x:Key="ShapeLocation">464.4,136.9</av:Point>
                                                            <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Sequence DisplayName="Receipts" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </FlowStep>
                                                      <FlowStep x:Key="PurchaseOrders" x:Name="__ReferenceID14">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <av:Point x:Key="ShapeLocation">230,274.9</av:Point>
                                                            <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Sequence DisplayName="PurchaseOrders" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Type Argument: DataTable" DisplayName="For Each - Data Table in ExtractionDataSet" sap:VirtualizedContainerService.HintSize="636.8,869.6" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[ExtractionDataSet.Tables]">
                                                            <ui:ForEach.Body>
                                                              <ActivityAction x:TypeArguments="sd1:DataTable">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="ExtractDT" />
                                                                </ActivityAction.Argument>
                                                                <Sequence DisplayName="Sequence - For Each - Data Table in ExtractionDataSet" sap:VirtualizedContainerService.HintSize="601.6,704" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:ForEach x:TypeArguments="sd1:DataColumn" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Type Argument: Data Column" DisplayName="For Each - Column in Extract DT" sap:VirtualizedContainerService.HintSize="560,611.2" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[ExtractDT.Columns]">
                                                                    <ui:ForEach.Body>
                                                                      <ActivityAction x:TypeArguments="sd1:DataColumn">
                                                                        <ActivityAction.Argument>
                                                                          <DelegateInArgument x:TypeArguments="sd1:DataColumn" Name="DTColumn" />
                                                                        </ActivityAction.Argument>
                                                                        <Sequence DisplayName="Sequence - For Each - Column in Extract DT" sap:VirtualizedContainerService.HintSize="524.8,445.6" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If Condition="[(DTColumn.ColumnName.Contains(&quot;- Confidence&quot;) Or DTColumn.ColumnName.Contains(&quot;- OCR Confidence&quot;)) And Not ManualVerification And Not DTColumn.ColumnName.Contains(&quot;Line Items - OCR Confidence&quot;)]" DisplayName="If - the column names contain Extractor or OCR Confidence" sap:VirtualizedContainerService.HintSize="483.2,352.8" sap2010:WorkflowViewState.IdRef="If_17">
                                                                            <If.Then>
                                                                              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[ExtractDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="233.6,173.6" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                                                                <ui:ForEachRow.Body>
                                                                                  <ActivityAction x:TypeArguments="sd1:DataRow">
                                                                                    <ActivityAction.Argument>
                                                                                      <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="CurrentRow" />
                                                                                    </ActivityAction.Argument>
                                                                                    <Flowchart sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="Flowchart_4">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                          <av:Point x:Key="ShapeLocation">20,2.4</av:Point>
                                                                                          <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                                                                                          <av:PointCollection x:Key="ConnectorLocation">50,77.6 50,107.6 49.6,107.6 49.6,127.6</av:PointCollection>
                                                                                          <x:Double x:Key="Height">721.99999999999977</x:Double>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <Flowchart.StartNode>
                                                                                        <x:Reference>__ReferenceID5</x:Reference>
                                                                                      </Flowchart.StartNode>
                                                                                      <FlowDecision x:Name="__ReferenceID5" Condition="[ManualVerification]" DisplayName="Manual Verfiation" sap:VirtualizedContainerService.HintSize="99.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_11">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <av:Point x:Key="ShapeLocation">0,127.6</av:Point>
                                                                                            <av:Size x:Key="ShapeSize">99.2,87.2</av:Size>
                                                                                            <av:PointCollection x:Key="FalseConnector">99.2,171.2 185,171.2 185,226.4</av:PointCollection>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                        <FlowDecision.False>
                                                                                          <FlowDecision x:Name="__ReferenceID1" Condition="[string.IsNullOrEmpty(CurrentRow(DTColumn.ColumnName).ToString)]" DisplayName="Null Value Check" sap:VirtualizedContainerService.HintSize="93.6,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_10" True="{x:Reference __ReferenceID0}">
                                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                <av:Point x:Key="ShapeLocation">114.8,226.4</av:Point>
                                                                                                <av:Size x:Key="ShapeSize">93.6,87.2</av:Size>
                                                                                                <av:PointCollection x:Key="TrueConnector">114.8,270 8.80000000000001,270 8.80000000000001,620 38.8,620</av:PointCollection>
                                                                                                <av:PointCollection x:Key="FalseConnector">208.4,270 429,270 429,326.4</av:PointCollection>
                                                                                              </scg:Dictionary>
                                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                                            <FlowDecision.False>
                                                                                              <FlowDecision x:Name="__ReferenceID2" Condition="[DTColumn.ColumnName.Contains(&quot;- Confidence&quot;)]" DisplayName="Extractor Confidence" sap:VirtualizedContainerService.HintSize="116,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_9">
                                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                    <av:Point x:Key="ShapeLocation">342,326.4</av:Point>
                                                                                                    <av:Size x:Key="ShapeSize">116,87.2</av:Size>
                                                                                                    <av:PointCollection x:Key="TrueConnector">342,370 290,370 290,456.4</av:PointCollection>
                                                                                                    <av:PointCollection x:Key="FalseConnector">458,370 510,370 510,456.4</av:PointCollection>
                                                                                                    <x:String x:Key="FalseLabel">OCR</x:String>
                                                                                                    <x:String x:Key="TrueLabel">Extractor</x:String>
                                                                                                  </scg:Dictionary>
                                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                                <FlowDecision.True>
                                                                                                  <FlowDecision x:Name="__ReferenceID3" Condition="[Double.Parse(CurrentRow(DTColumn.ColumnName).ToString) &lt; 0.7]" DisplayName="Confidence Value Check" sap:VirtualizedContainerService.HintSize="132,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_7" True="{x:Reference __ReferenceID0}">
                                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                        <av:Point x:Key="ShapeLocation">224,456.4</av:Point>
                                                                                                        <av:Size x:Key="ShapeSize">132,87.2</av:Size>
                                                                                                        <av:PointCollection x:Key="TrueConnector">224,500 170,500 170,590</av:PointCollection>
                                                                                                      </scg:Dictionary>
                                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                                  </FlowDecision>
                                                                                                </FlowDecision.True>
                                                                                                <FlowDecision.False>
                                                                                                  <FlowDecision x:Name="__ReferenceID4" Condition="[Double.Parse(CurrentRow(DTColumn.ColumnName).ToString) &lt; 0.5]" DisplayName="Confidence Value Check" sap:VirtualizedContainerService.HintSize="132,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_8">
                                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                        <av:Point x:Key="ShapeLocation">444,456.4</av:Point>
                                                                                                        <av:Size x:Key="ShapeSize">132,87.2</av:Size>
                                                                                                        <av:PointCollection x:Key="TrueConnector">444,500 414,500 414,620 301.2,620</av:PointCollection>
                                                                                                      </scg:Dictionary>
                                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                                    <FlowDecision.True>
                                                                                                      <FlowStep x:Name="__ReferenceID0">
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <av:Point x:Key="ShapeLocation">38.8,590</av:Point>
                                                                                                            <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                        <Assign DisplayName="Assign - True to ManualVerification" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="x:Boolean">[ManualVerification]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                          </Assign.Value>
                                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            </scg:Dictionary>
                                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                                        </Assign>
                                                                                                      </FlowStep>
                                                                                                    </FlowDecision.True>
                                                                                                  </FlowDecision>
                                                                                                </FlowDecision.False>
                                                                                              </FlowDecision>
                                                                                            </FlowDecision.False>
                                                                                          </FlowDecision>
                                                                                        </FlowDecision.False>
                                                                                      </FlowDecision>
                                                                                      <x:Reference>__ReferenceID1</x:Reference>
                                                                                      <x:Reference>__ReferenceID0</x:Reference>
                                                                                      <x:Reference>__ReferenceID2</x:Reference>
                                                                                      <x:Reference>__ReferenceID3</x:Reference>
                                                                                      <x:Reference>__ReferenceID4</x:Reference>
                                                                                    </Flowchart>
                                                                                  </ActivityAction>
                                                                                </ui:ForEachRow.Body>
                                                                              </ui:ForEachRow>
                                                                            </If.Then>
                                                                          </If>
                                                                        </Sequence>
                                                                      </ActivityAction>
                                                                    </ui:ForEach.Body>
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                  </ui:ForEach>
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ui:ForEach.Body>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:ForEach>
                                                        </Sequence>
                                                      </FlowStep>
                                                    </FlowSwitch>
                                                    <x:Reference>__ReferenceID12</x:Reference>
                                                    <x:Reference>__ReferenceID13</x:Reference>
                                                    <x:Reference>__ReferenceID14</x:Reference>
                                                  </Flowchart>
                                                </Sequence>
                                                <If Condition="[ManualVerification]" DisplayName="If - Manual Verification is required" sap:VirtualizedContainerService.HintSize="506.4,288" sap2010:WorkflowViewState.IdRef="If_16">
                                                  <If.Then>
                                                    <Sequence sap2010:Annotation.AnnotationText="Insufficient confidence level. A validation task will be created in Action Center." DisplayName="9.1: Action Center" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:LogMessage DisplayName="Log Message - Validation Task" sap:VirtualizedContainerService.HintSize="514.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;A validation task has be created for &quot; + Document.substring(93) + &quot; in Action Center&quot;]">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:LogMessage>
                                                      <p:CreateDocumentValidationAction FolderPath="{x:Null}" TimeoutMs="{x:Null}" ActionCatalog="[&quot;Validation Catalog&quot;]" ActionOutput="[ValidationActionObject]" ActionPriority="Medium" ActionTitle="[&quot;Document Validation for: &quot; + Document.substring(93)]" AutomaticExtractionResults="[AutomaticExtractionData]" BucketFolderPath="Shared" BucketName="DocTasks" DisplayName="Create Document Validation Action" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[Document]" DocumentText="[DocumentText]" sap:VirtualizedContainerService.HintSize="514.4,372" sap2010:WorkflowViewState.IdRef="CreateDocumentValidationAction_1" Taxonomy="[DocumentTaxonomy]" />
                                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="514.4,596" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                                        <TryCatch.Try>
                                                          <p:WaitForDocumentValidationActionAndResume ActionOutput="{x:Null}" StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" ActionInput="[ValidationActionObject]" AutomaticExtractionResults="[AutomaticExtractionData]" DisplayName="Wait For Document Validation Action And Resume" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[Document]" DocumentText="[DocumentText]" DownloadFolderPath="C:\Users\SamRobinson\Downloads" sap:VirtualizedContainerService.HintSize="477.6,364.8" sap2010:WorkflowViewState.IdRef="WaitForDocumentValidationActionAndResume_1" RemoveDataFromStorage="False" Taxonomy="[DocumentTaxonomy]" ValidatedExtractionResults="[ValidatedExtractionResults]" />
                                                        </TryCatch.Try>
                                                        <TryCatch.Catches>
                                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="480.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <Assign sap2010:Annotation.AnnotationText="Assign exception recorded by the user in Action Center." DisplayName="Assign - Validation Exception" sap:VirtualizedContainerService.HintSize="262.4,91.2" sap2010:WorkflowViewState.IdRef="Assign_16">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="s:Exception">[ValidationException]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                                </Assign.Value>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Assign>
                                                            </ActivityAction>
                                                          </Catch>
                                                        </TryCatch.Catches>
                                                      </TryCatch>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Assign DisplayName="Assign - Automatic to Validated" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="p4:ExtractionResult">[ValidatedExtractionResults]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="p4:ExtractionResult">[AutomaticExtractionData]</InArgument>
                                                      </Assign.Value>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Assign>
                                                  </If.Else>
                                                </If>
                                                <Sequence sap2010:Annotation.AnnotationText="Train the Intelligent Keyword Classifier using the human validated data in the ValidatedExtractionResults variable." DisplayName="10: Train Classifier" sap:VirtualizedContainerService.HintSize="506.4,160.8" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message - Training Classifier" sap:VirtualizedContainerService.HintSize="477.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Training Classifier...&quot;]" />
                                                  <p5:ExportExtractionResults DataSet="[ExportValidatedDataSet]" DisplayName="Export Extraction Results" ExtractionResult="[ValidatedExtractionResults]" sap:VirtualizedContainerService.HintSize="477.6,176.8" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_2" IncludeConfidence="False" IncludeOCRConfidence="False" />
                                                  <p8:TrainClassifiersScope HumanValidatedClassificationData="{x:Null}" sap2010:Annotation.AnnotationText="Will update the DocumentClassifier.json directly." DisplayName="Train Classifiers Scope" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[ClassifiedDocumentPath]" DocumentText="[DocumentText]" sap:VirtualizedContainerService.HintSize="477.6,401.6" HumanValidatedData="[ValidatedExtractionResults]" sap2010:WorkflowViewState.IdRef="TrainClassifiersScope_1" Taxonomy="[DocumentTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIeaafb63cf5e742728e675aabd5ece461&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;AccountsPayable.Incoming.Invoices&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UIeaafb63cf5e742728e675aabd5ece461&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UIeaafb63cf5e742728e675aabd5ece461&quot;:[]}}">
                                                    <p8:TrainClassifiersScope.Trainables>
                                                      <p8:IntelligentKeywordClassifierTrainer LearningData="{x:Null}" DisplayName="Intelligent Keyword Classifier Trainer" sap:VirtualizedContainerService.HintSize="233.6,115.2" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifierTrainer_1" LearningFilePath="DocumentProcessing\IntelligentKeywordClassifier.json" PersistenceId="UIeaafb63cf5e742728e675aabd5ece461">
                                                        <p8:IntelligentKeywordClassifierTrainer.DocumentObjectModel>
                                                          <InArgument x:TypeArguments="p3:Document">
                                                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                                                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p8:IntelligentKeywordClassifierTrainer.DocumentObjectModel>
                                                        <p8:IntelligentKeywordClassifierTrainer.DocumentPath>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p8:IntelligentKeywordClassifierTrainer.DocumentPath>
                                                        <p8:IntelligentKeywordClassifierTrainer.DocumentText>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p8:IntelligentKeywordClassifierTrainer.DocumentText>
                                                        <p8:IntelligentKeywordClassifierTrainer.HumanValidatedData>
                                                          <InArgument x:TypeArguments="p4:ExtractionResult[]">
                                                            <DelegateArgumentValue x:TypeArguments="p4:ExtractionResult[]">
                                                              <DelegateInArgument x:TypeArguments="p4:ExtractionResult[]" Name="HumanValidatedData" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p8:IntelligentKeywordClassifierTrainer.HumanValidatedData>
                                                      </p8:IntelligentKeywordClassifierTrainer>
                                                    </p8:TrainClassifiersScope.Trainables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </p8:TrainClassifiersScope>
                                                </Sequence>
                                                <Sequence sap2010:Annotation.AnnotationText="Train the Machine Learning Extractors using the human validated data in the ValidatedExtractionResults variable." DisplayName="11: Train Extractors" sap:VirtualizedContainerService.HintSize="506.4,160.8" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message - Train Extractors" sap:VirtualizedContainerService.HintSize="608.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;Training Extractors...&quot;]" />
                                                  <p8:TrainExtractorsScope DisplayName="Train Extractors Scope" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[ClassifiedDocumentPath]" DocumentText="[DocumentText]" sap:VirtualizedContainerService.HintSize="608.8,450.4" HumanValidatedData="[ValidatedExtractionResults]" sap2010:WorkflowViewState.IdRef="TrainExtractorsScope_1" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI3d23c38d8bc8482592cbb63eb180ce07&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices&quot;:{&quot;FieldMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices.SupplierName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.SupplierName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.InvoiceDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.InvoiceDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.SupplierAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.SupplierAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.PaymentTerms&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.PaymentTerms&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.BillingName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.BillingName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.BillingAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.BillingAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.ShippingAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.ShippingAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.NetAmount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.NetAmount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.Invoices.LineItems.LineTotal&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.LineTotal&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;},&quot;AccountsPayable.Incoming.PurchaseOrders&quot;:{&quot;FieldMappings&quot;:{&quot;AccountsPayable.Incoming.PurchaseOrders.PONumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.PONumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;po-number\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.PODate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.PODate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.ClientName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ClientName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;client-name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.ClientAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ClientAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;client-address\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.VendorName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.VendorName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;vendor-name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.VendorAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.VendorAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;vendor-address\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.ShippingName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ShippingName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;shipping-name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.DeliveryDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.DeliveryDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;delivery-by-date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;items\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;line-number\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.ItemDescription&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.ItemDescription&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;description\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;quantity\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;unit-price\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineAmount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineAmount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;line-amount\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}},&quot;UI9f4c95fccfcf4bfe9e7ea0820978bf5d&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices&quot;:{&quot;FieldMappings&quot;:{&quot;AccountsPayable.Incoming.Invoices.SupplierName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.SupplierName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.InvoiceDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.InvoiceDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.SupplierAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.SupplierAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.PaymentTerms&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.PaymentTerms&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.BillingName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.BillingName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.BillingAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.BillingAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.ShippingAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.ShippingAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.NetAmount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.NetAmount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AccountsPayable.Incoming.Invoices.LineItems.LineTotal&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.Invoices.LineItems.LineTotal&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null},&quot;AccountsPayable.Incoming.PurchaseOrders&quot;:{&quot;FieldMappings&quot;:{&quot;AccountsPayable.Incoming.PurchaseOrders.PONumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.PONumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.PODate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.PODate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.ClientName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ClientName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.ClientAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ClientAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.VendorName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.VendorName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.VendorAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.VendorAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.ShippingName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.ShippingName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.DeliveryDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.DeliveryDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.ItemDescription&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.ItemDescription&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.UnitPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.UnitPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineAmount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AccountsPayable.Incoming.PurchaseOrders.POItems.LineAmount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9f4c95fccfcf4bfe9e7ea0820978bf5d&quot;:&quot;0&quot;,&quot;UI3d23c38d8bc8482592cbb63eb180ce07&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9f4c95fccfcf4bfe9e7ea0820978bf5d&quot;:[],&quot;UI3d23c38d8bc8482592cbb63eb180ce07&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;po-number&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;client-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;client-address&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-address&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;shipping-address&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;billing-address&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;payment-terms&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;delivery-by-date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;discount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;net-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tax-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tax-rate&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;total-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;currency&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;line-number&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;description&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;product-code&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;delivery-date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;unit-measure&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;unit-price&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;quantity&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-net-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-tax-rate&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-tax-amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-amount&quot;,&quot;SubOptions&quot;:null}]}]}]}}">
                                                    <p8:TrainExtractorsScope.Trainables>
                                                      <p6:MachineLearningExtractorTrainer SelectedMLSkill="{x:Null}" Configuration="{}{&quot;Endpoint&quot;:&quot;https://du.uipath.com/ie/purchase_orders&quot;,&quot;AvailableMLSkills&quot;:[]}" DisplayName="Machine Learning Extractor Trainer - Purchase Orders" Endpoint="https://du.uipath.com/ie/purchase_orders" sap:VirtualizedContainerService.HintSize="233.6,195.2" sap2010:WorkflowViewState.IdRef="MachineLearningExtractorTrainer_2" OutputFolder="[PurchaseOrderTrainingDataPath]" PersistenceId="UI3d23c38d8bc8482592cbb63eb180ce07">
                                                        <p6:MachineLearningExtractorTrainer.AvailableMLSkills>
                                                          <sc:BindingList x:TypeArguments="x:String" AllowEdit="True" AllowNew="False" AllowRemove="True" RaiseListChangedEvents="True" />
                                                        </p6:MachineLearningExtractorTrainer.AvailableMLSkills>
                                                        <p6:MachineLearningExtractorTrainer.DocumentObjectModel>
                                                          <InArgument x:TypeArguments="p3:Document">
                                                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                                                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractorTrainer.DocumentObjectModel>
                                                        <p6:MachineLearningExtractorTrainer.DocumentPath>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractorTrainer.DocumentPath>
                                                        <p6:MachineLearningExtractorTrainer.DocumentText>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractorTrainer.DocumentText>
                                                        <p6:MachineLearningExtractorTrainer.HumanValidatedData>
                                                          <InArgument x:TypeArguments="p4:ExtractionResult[]">
                                                            <DelegateArgumentValue x:TypeArguments="p4:ExtractionResult[]">
                                                              <DelegateInArgument x:TypeArguments="p4:ExtractionResult[]" Name="HumanValidatedData" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractorTrainer.HumanValidatedData>
                                                      </p6:MachineLearningExtractorTrainer>
                                                      <p6:MachineLearningExtractorTrainer AvailableMLSkills="{x:Null}" Configuration="{x:Null}" SelectedMLSkill="{x:Null}" DisplayName="Machine Learning Extractor Trainer - Invoices" Endpoint="https://du-au.uipath.com/ie/invoices" sap:VirtualizedContainerService.HintSize="233.6,195.2" sap2010:WorkflowViewState.IdRef="MachineLearningExtractorTrainer_1" OutputFolder="[InvoiceTrainingDataPath]" PersistenceId="UI9f4c95fccfcf4bfe9e7ea0820978bf5d">
                                                        <p6:MachineLearningExtractorTrainer.DocumentObjectModel>
                                                          <InArgument x:TypeArguments="p3:Document">
                                                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                                                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractorTrainer.DocumentObjectModel>
                                                        <p6:MachineLearningExtractorTrainer.DocumentPath>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractorTrainer.DocumentPath>
                                                        <p6:MachineLearningExtractorTrainer.DocumentText>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractorTrainer.DocumentText>
                                                        <p6:MachineLearningExtractorTrainer.HumanValidatedData>
                                                          <InArgument x:TypeArguments="p4:ExtractionResult[]">
                                                            <DelegateArgumentValue x:TypeArguments="p4:ExtractionResult[]">
                                                              <DelegateInArgument x:TypeArguments="p4:ExtractionResult[]" Name="HumanValidatedData" />
                                                            </DelegateArgumentValue>
                                                          </InArgument>
                                                        </p6:MachineLearningExtractorTrainer.HumanValidatedData>
                                                      </p6:MachineLearningExtractorTrainer>
                                                    </p8:TrainExtractorsScope.Trainables>
                                                  </p8:TrainExtractorsScope>
                                                </Sequence>
                                                <Sequence sap2010:Annotation.AnnotationText="Export DataSets in the form of excel spreadsheets that can be used to train the ML models in AI Center." DisplayName="12: Export Data Sets" sap:VirtualizedContainerService.HintSize="506.4,144.8" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Type Argument: Data Table." DisplayName="For Each - Data Table in ExportValidatedSataSet" sap:VirtualizedContainerService.HintSize="410.4,374.4" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[ExportValidatedDataSet.Tables]">
                                                    <ui:ForEach.Body>
                                                      <ActivityAction x:TypeArguments="sd1:DataTable">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="ExportData" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Sequence - For Each - Data Table in ExportValidatedSet" sap:VirtualizedContainerService.HintSize="375.2,208.8" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:WriteRange AddHeaders="True" DataTable="[ExportData]" DisplayName="Write Range - Output Data" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="[ExportData.TableName]" WorkbookPath="[OutputDataFolderPath + path.GetFileNameWithoutExtension(ClassifiedDocumentPath) + &quot;_&quot; + DocumentCategory + &quot;.xlsx&quot;]">
                                                            <ui:WriteRange.StartingCell>
                                                              <InArgument x:TypeArguments="x:String">
                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                              </InArgument>
                                                            </ui:WriteRange.StartingCell>
                                                          </ui:WriteRange>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ForEach.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:ForEach>
                                                </Sequence>
                                              </Sequence>
                                            </ActivityAction>
                                          </ParallelForEach>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <ui:LogMessage DisplayName="Log Message - Classification Exception" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Warn" Message="[Document.substring(93) + &quot; marked as exception in Action Center during classification&quot;]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEach>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ParallelForEach>
                  </Sequence>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID16</x:Reference>
    <x:Reference>__ReferenceID17</x:Reference>
    <x:Reference>__ReferenceID18</x:Reference>
  </Flowchart>
</Activity>